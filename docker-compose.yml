version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-support-bot-app
    ports:
      - "${APP_PORT:-3000}:${PORT:-3000}"
    environment:
      - PORT=${PORT:-3000}
      - NODE_OPTIONS=${NODE_OPTIONS:---experimental-vm-modules --no-warnings}
      # Application specific ENV variables
      - PUBLIC_SUPABASE_URL=${PUBLIC_SUPABASE_URL}
      - PUBLIC_SUPABASE_ANON_KEY=${PUBLIC_SUPABASE_ANON_KEY}
      - OPENROUTER_API_KEY=${OPENROUTER_API_KEY}
      - DISCORD_TOKEN=${DISCORD_TOKEN}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_SECRET=${DISCORD_SECRET}
      - DISCORD_REDIRECT_URI=${DISCORD_REDIRECT_URI}
      - SUPABASE_SERVICE_ROLE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
      # For Supabase client within the app
      - SUPABASE_URL=http://kong:8000
      - SUPABASE_ANON_KEY=${PUBLIC_SUPABASE_ANON_KEY}
    volumes:
      - ./logs:/app/logs
    depends_on:
      db:
        condition: service_healthy
    networks:
      - supabase_network
    restart: unless-stopped

  # Supabase Services
  kong:
    image: supabase/kong:latest
    container_name: supabase-kong
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/var/lib/kong/kong.yml
      - KONG_DNS_ORDER=LAST,A,CNAME
      - KONG_PLUGINS=request-transformer,cors,key-auth,acl
      - KONG_ADMIN_LISTEN=0.0.0.0:8001
      - KONG_PROXY_LISTEN=0.0.0.0:8000
      - KONG_ANON_KEY=${PUBLIC_SUPABASE_ANON_KEY}
      - KONG_SERVICE_KEY=${SUPABASE_SERVICE_ROLE_KEY}
    ports:
      - "${KONG_PORT:-8000}:8000"
      - "${KONG_ADMIN_PORT:-8001}:8001"
    volumes:
      - ./supabase/kong/kong.yml:/var/lib/kong/kong.yml:ro
    networks:
      - supabase_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: supabase/postgres:15.1.0.118
    container_name: supabase-db
    ports:
      - "${POSTGRES_PORT:-54322}:5432"
    volumes:
      - supabase_db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=supabase
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=postgres
      - PGRST_DB_ANON_ROLE=anon
    networks:
      - supabase_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U supabase -d postgres -q"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  auth:
    image: supabase/gotrue:v2.135.0
    container_name: supabase-auth
    environment:
      - GOTRUE_API_HOST=0.0.0.0
      - GOTRUE_API_PORT=9999
      - GOTRUE_DB_DRIVER=postgres
      - GOTRUE_DB_DATABASE_URL=postgresql://supabase:${POSTGRES_PASSWORD}@db:5432/postgres
      - GOTRUE_SITE_URL=${SITE_URL}
      - GOTRUE_URI_ALLOW_LIST=${URI_ALLOW_LIST}
      - GOTRUE_JWT_SECRET=${JWT_SECRET}
      - GOTRUE_JWT_EXP=3600
      - GOTRUE_DISABLE_SIGNUP=${GOTRUE_DISABLE_SIGNUP:-false}
      - GOTRUE_MAILER_AUTOCONFIRM=true
    depends_on:
      db:
        condition: service_healthy
    networks:
      - supabase_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "--tries=1", "http://localhost:9999/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  rest:
    image: postgrest/postgrest:v12.0.2
    container_name: supabase-rest
    environment:
      - PGRST_DB_URI=postgresql://supabase:${POSTGRES_PASSWORD}@db:5432/postgres
      - PGRST_DB_SCHEMA=public,storage
      - PGRST_DB_ANON_ROLE=anon
      - PGRST_JWT_SECRET=${JWT_SECRET}
      - PGRST_SERVER_HOST=0.0.0.0
      - PGRST_SERVER_PORT=3000
    depends_on:
      db:
        condition: service_healthy
    networks:
      - supabase_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--spider", "--tries=1", "http://localhost:3000/"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  supabase_db_data:
    name: supabase_db_data

networks:
  supabase_network:
    driver: bridge 