---
import DashboardLayout from "@/layouts/DashboardLayout.astro";
import DiscordKnowledgeList from "@/components/knowledge/DiscordKnowledgeList";
import { getDocumentsByServerId } from "@/lib/services/documents";
import type { DocumentList as DocumentListType } from "@/types";
import { getServerById } from "@/lib/services/mockServers";

// Get the server ID from the URL
const { id } = Astro.params;

// We'll handle not having an ID in the React component
if (!id) {
  return Astro.redirect("/dashboard");
}

// Get server details for the header
const server = await getServerById(id);
if (!server) {
  return Astro.redirect("/dashboard");
}

// Get initial documents list
let documents: DocumentListType | null = null;

try {
  // @ts-ignore - Supabase is available in Astro.locals
  const supabase = Astro.locals.supabase;
  documents = await getDocumentsByServerId(id, { page: 1, pageSize: 100 }, supabase);
} catch (err) {
  console.error("Error fetching documents:", err);
  // We'll let the client-side component handle the error
}

// Convert null iconUrl to undefined for the DashboardLayout prop
const serverIcon = server.iconUrl || undefined;
---

<DashboardLayout 
  title={`${server.name} - Knowledge Base`} 
  activeTab="knowledge" 
  serverName={server.name}
  serverIcon={serverIcon}
  showTabs={true}
>
  <DiscordKnowledgeList client:load serverId={id} initialDocuments={documents} />
</DashboardLayout>
