---
/** eslint-disable no-console */

import DashboardLayout from "@/layouts/DashboardLayout.astro";
import { CombinedKnowledgeView } from "@/components/knowledge/CombinedKnowledgeView";
import { getDocumentsByServerId } from "@/lib/services/documents";
import type { DocumentList as DocumentListType } from "@/types";
import { getServerById } from "@/lib/services/serverService";

// Get the server ID from the URL
const { id } = Astro.params;

// Debug logs
console.log("***** DEBUG KNOWLEDGE PAGE *****");
console.log("Current path:", Astro.url.pathname);
console.log("Server ID from params:", id);

// We'll handle not having an ID in the React component
if (!id) {
  console.log("No server ID found, redirecting to dashboard");
  return Astro.redirect("/dashboard");
}

// Get server from database
const server = await getServerById(id);

// If not found, redirect to dashboard
if (!server) {
  console.log(`Server with ID ${id} not found, redirecting to dashboard`);
  return Astro.redirect("/dashboard");
}

// Get initial documents list
let documents: DocumentListType | null = null;

try {
  const supabase = Astro.locals.supabase;
  if (!supabase) {
    console.error("Supabase client not available in Astro.locals");
  } else {
    documents = await getDocumentsByServerId(id, { page: 1, pageSize: 100 }, supabase);
    console.log(`Found ${documents?.data?.length || 0} documents for server ${id}`);
  }
} catch (err) {
  console.error("Error fetching documents:", err);
  // We'll let the client-side component handle the error
}

// Convert database server to the format expected by the layout
const serverName = server.name;
const serverIcon = server.icon_url || undefined;
---

<DashboardLayout
  title={`${serverName} - Knowledge Base`}
  activeTab="knowledge"
  serverName={serverName}
  serverIcon={serverIcon}
  showTabs={false}
>
  <CombinedKnowledgeView client:load serverId={id} initialDocuments={documents} />
</DashboardLayout>
